{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/root-routes.js","src/route-factory.js","src/app/app-routes.js","src/app/index.js","src/app-signup/index.js","src/app-login/index.js","src/resources/index.js","src/app/dashboard/index.js","src/app/profile/index.js","src/app/video/index.js","src/resources/elements/index.js","src/resources/value-converters/index.js"],"names":["logger","getLogger","App","rootRoutes","message","loaded","routeOptions","viewPort","debug","activate","setTimeout","attached","configureRouter","config","router","title","routeConfig","routes","map","c","name","navigation","navTo","route","navigateToRoute","undefined","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RootRoutes","redirect","folder","RouteFactory","options","rootFolder","result","routeData","r","moduleId","auth","getValue","nav","routePath","href","item","viewPorts","type","args","Array","prototype","slice","call","arguments","adx","length","AppRoutes","appRoutes","routeName","AppLogin","resources","converters","elements","allResources","Object","values","reduce","all","res","concat","globalResources","DashboardPage","Profile","VideoPage"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, LogManager} from 'aurelia-framework';\nimport {RootRoutes} from './root-routes';\n\nlet logger = LogManager.getLogger('app.root');\n\n@inject(RootRoutes)\nexport class App {\n  constructor (rootRoutes) {\n    this.rootRoutes = rootRoutes;\n    this.message = 'Loading...';\n    this.loaded = false;\n    this.routeOptions = { viewPort: 'main'};\n    logger.debug('constructor');\n  }\n\n  activate () {\n    logger.debug('activate...');\n    setTimeout(() => {\n      logger.debug('activated');\n      this.loaded = true;\n      this.message = 'Loaded';\n    }, 1000);\n  }\n\n  attached () {\n    logger.debug('attached');\n  }\n\n  /**\n   * This is called when the viewport is registered\n   */\n  configureRouter (config, router) {\n    this.router = router;\n    config.title = 'Test Console';\n    const routeConfig = this.rootRoutes.routes(this.routeOptions);\n    config.map(routeConfig);\n    logger.debug('Configured root routes', routeConfig.map(c => c.name));\n    logger.debug('Configured root routes', this.router.navigation);\n  }\n\n  navTo (route) {\n    return this.router ? this.router.navigateToRoute(route) : undefined;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {RouteFactory} from './route-factory';\n\nexport class RootRoutes extends RouteFactory {\n\n  constructor () {\n    super();\n  }\n\n  get routeData () {\n    return [\n      {\n        route: '', redirect: 'app'\n      },\n      {\n        route: 'app',\n        name: 'app'\n      },\n      {\n        route: 'app-login',\n        folder: 'app-login',\n        name: 'login'\n      },\n      {\n        route: 'app-signup',\n        folder: 'app-signup',\n        name: 'signup'\n      }\n    ];\n  }\n}\n","export class RouteFactory {\n  constructor () {\n  }\n\n  get routeData () {\n    return [];\n  }\n\n  /**\n   *\n   * @param [options] {Object}\n   * @param [options.folder] {String} Folder under which route modules can be found, if not current\n   *   folder\n   * @param [options.viewPortName] {String} Router view port name\n   * @param [options.auth] {Boolean} If set, override auth to this value\n   * @param [options.nav] {Boolean} If set, override nav to this value\n   * @param [options] {Object}\n   */\n  routes (options) {\n    options = options || {};\n    const rootFolder = options.folder ? ('./' + options.folder + '/') : './';\n    const result = this.routeData.map(r => {\n      if (r.redirect) {\n        return r;\n      } else {\n        let moduleId = rootFolder + (r.folder || r.name || r.route) + '/index';\n        let auth = getValue('boolean', options.auth, r.auth, false);\n        let nav = getValue('boolean', options.nav, r.nav, true);\n        let route = options.routePath ? (options.routePath + '/' + r.route) : r.route;\n        let href = r.href;\n        if (!href && options.href === true) {\n          href = ( typeof r.route === 'string') ? r.route : r.route[0];\n        }\n        let item = {\n          route: route,\n          name: r.name || r.route,\n          title: r.title || r.route,\n          auth: auth,\n          nav: nav\n        };\n        if (href !== undefined) {\n          item.href = href;\n        }\n        if (options.viewPort) {\n          item.viewPorts = {};\n          item.viewPorts[options.viewPort] = { moduleId: moduleId };\n        } else {\n          item.moduleId = moduleId;\n        }\n        return item;\n      }\n    });\n    return result;\n  }\n\n}\n\nfunction getValue (type) {\n  let args = Array.prototype.slice.call(arguments, 1);\n  for (let adx = 0; adx < args.length; adx++) {\n    if (typeof args[adx] === type) {\n      return args[adx];\n    }\n  }\n}\n","import {RouteFactory} from '../route-factory';\n\nexport class AppRoutes extends RouteFactory {\n\n  constructor () {\n    super();\n  }\n\n  get routeData () {\n    return [\n      {\n        route: '',\n        redirect: 'dashboard'\n      },\n      {\n        route: ['dashboard', ''],\n        name: 'dashboard',\n        title: 'Dashboard'\n      },\n      {\n        route: 'video'\n      },\n      {\n        route: 'profile'\n      }\n    ];\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {AppRoutes} from './app-routes';\n\nlet logger = LogManager.getLogger('app.app');\n\n@inject(AppRoutes)\nexport class App {\n  constructor (appRoutes) {\n    this.appRoutes = appRoutes;\n    this.routeOptions = { viewPort: 'content' };\n    logger.debug('constructor');\n  }\n\n  activate () {\n    logger.debug('activate...');\n    setTimeout(() => {\n      logger.debug('activated');\n    }, 500);\n  }\n\n  attached () {\n    logger.debug('attached');\n  }\n\n  configureRouter (config, router) {\n    this.router = router;\n    config.title = 'App Pages';\n    const routeConfig = this.appRoutes.routes(this.routeOptions);\n    config.map(routeConfig);\n    logger.debug('Configured app routes', routeConfig.map(c => c.name));\n    logger.debug('Configured app routes', this.router.navigation);\n  }\n\n  get routes () {\n    return routes;\n  }\n\n  navTo (routeName) {\n    return this.router ? this.router.navigateToRoute(routeName) : undefined;\n  }\n\n}\n","import { LogManager} from 'aurelia-framework';\n\nlet logger = LogManager.getLogger('app.signup');\n\nexport class AppLogin {\n  constructor () {\n    logger.debug('constructor');\n  }\n\n}\n","import { LogManager} from 'aurelia-framework';\n\nlet logger = LogManager.getLogger('app.login');\n\nexport class AppLogin {\n  constructor () {\n    logger.debug('constructor');\n  }\n\n}\n","import converters from './value-converters/index';\nimport elements from './elements/index';\n\n\nconst resources = {\n  converters: converters.map(name => './value-converters/' + name),\n  elements: elements.map(name => './elements/' + name)\n};\n\nconst allResources = Object.values(resources)\n  .reduce((all, res) => all.concat(res), []);\n\n\nexport function configure (aurelia) {\n  aurelia.globalResources(allResources);\n}\n","export class DashboardPage {\n  constructor () {\n    this.message = 'dashboard top';\n  }\n}\n","export class Profile {\n  constructor () {\n    this.message = 'dashboard top';\n  }\n}\n","import { LogManager} from 'aurelia-framework';\n\nlet logger = LogManager.getLogger('app.video');\n\nexport class VideoPage {\n  constructor () {\n    logger.debug('constructor');\n  }\n}\n","export default ['router-nav.html', 'text-filler.html'];\n","export default [];\n"],"sourceRoot":".."}