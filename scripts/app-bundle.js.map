{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/root-routes.js","src/route-factory.js","src/app/app-routes.js","src/app/index.js","src/app-login/index.js","src/app-signup/index.js","src/resources/index.js","src/app/dashboard/index.js","src/app/profile/index.js","src/app/video/index.js"],"names":["logger","getLogger","App","rootRoutes","loaded","routeOptions","viewPort","activate","setTimeout","configureRouter","config","router","title","routeConfig","routes","map","debug","c","name","navTo","route","navigateToRoute","undefined","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RootRoutes","folder","RouteFactory","options","rootFolder","result","routeData","moduleId","r","auth","nav","routePath","href","item","viewPorts","AppRoutes","appRoutes","navigation","routeName","AppLogin","DashboardPage","message"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, LogManager} from 'aurelia-framework';\nimport {RootRoutes} from './root-routes';\n\nlet logger = LogManager.getLogger('app');\n\n@inject(RootRoutes)\nexport class App {\n  constructor (rootRoutes) {\n    this.rootRoutes = rootRoutes;\n    this.loaded = false;\n    this.routeOptions = { viewPort: 'main'};\n  }\n\n  activate () {\n    setTimeout(() => {\n      this.loaded = true;\n    }, 1000);\n  }\n\n  configureRouter (config, router) {\n    this.router = router;\n    config.title = 'Test Console';\n    const routeConfig = this.rootRoutes.routes(this.routeOptions);\n    config.map(routeConfig);\n    logger.debug('Configured app routes', routeConfig.map(c => c.name));\n  }\n\n  navTo (route) {\n    return this.router ? this.router.navigateToRoute(route) : undefined;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {RouteFactory} from './route-factory';\n\nexport class RootRoutes extends RouteFactory {\n\n  constructor () {\n    super();\n  }\n\n  get routeData () {\n    return [\n      {\n        route: ['app', ''],\n        name: 'app'\n      },\n      {\n        route: 'app-login',\n        folder: 'app-login',\n        name: 'login'\n      },\n      {\n        route: 'app-signup',\n        folder: 'app-signup',\n        name: 'signup'\n      }\n    ];\n  }\n}\n","export class RouteFactory {\n  constructor () {\n  }\n\n  get routeData () {\n    return [];\n  }\n\n  /**\n   *\n   * @param [options] {Object}\n   * @param [options.folder] {String} Folder under which route modules can be found, if not current\n   *   folder\n   * @param [options.viewPortName] {String} Router view port name\n   * @param [options.auth] {Boolean} If set, override auth to this value\n   * @param [options.nav] {Boolean} If set, override nav to this value\n   * @param [options] {Object}\n   */\n  routes (options) {\n    options = options || {};\n    const rootFolder = options.folder ? ('./' + options.folder + '/') : './';\n    const result = this.routeData.map(r => {\n      let moduleId = rootFolder + (r.folder || r.name) + '/index';\n      let auth = (typeof options.auth === 'boolean') ? options.auth : r.auth;\n      let nav = (typeof options.nav === 'boolean') ? options.nav : r.nav;\n      let route = options.routePath ? (options.routePath + '/' + r.route) : r.route;\n      let href = r.href;\n      if (!href && options.href === true) {\n        href = ( typeof r.route === 'string') ? r.route : r.route[0];\n      }\n      let item = {\n        route: route,\n        name: r.name || r.route,\n        title: r.title || r.route\n      };\n      if (auth !== undefined) {\n        item.auth = auth;\n      }\n      if (nav !== undefined) {\n        item.nav = nav;\n      }\n      if (href !== undefined) {\n        item.href = href;\n      }\n      if (options.viewPort) {\n        item.viewPorts = {};\n        item.viewPorts[options.viewPort] = { moduleId: moduleId };\n      } else {\n        item.moduleId = moduleId;\n      }\n      return item;\n    });\n    return result;\n  }\n\n}\n","import {RouteFactory} from '../route-factory';\n\nexport class AppRoutes extends RouteFactory {\n\n  constructor () {\n    super();\n  }\n\n  get routeData () {\n    return [\n      {\n        route: ['dashboard', ''],\n        name: 'dashboard'\n      },\n      {\n        route: 'video'\n      },\n      {\n        route: 'profile'\n      }\n    ];\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {AppRoutes} from './app-routes';\n\nlet logger = LogManager.getLogger('app');\n\n@inject(AppRoutes)\nexport class App {\n  constructor (appRoutes) {\n    this.appRoutes = appRoutes;\n    this.routeOptions = { viewPort: 'content' };\n  }\n\n  configureRouter (config, router) {\n    this.router = router;\n    config.title = 'App Pages';\n    const routeConfig = this.appRoutes.routes(this.routeOptions);\n    config.map(routeConfig);\n    logger.debug('Configured page routes', routeConfig.map(c => c.name));\n    logger.debug('Configured page routes', this.router.navigation);\n  }\n\n  get routes () {\n    return routes;\n  }\n\n  navTo (routeName) {\n    return this.router ? this.router.navigateToRoute(routeName) : undefined;\n  }\n\n}\n","export class AppLogin {\n  constructor () {\n  }\n\n}\n","export class AppLogin {\n  constructor () {\n  }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class DashboardPage {\n  constructor () {\n    this.message = 'dashboard top';\n  }\n}\n","export class DashboardPage {\n  constructor () {\n    this.message = 'dashboard top';\n  }\n}\n","export class DashboardPage {\n  constructor () {\n    this.message = 'dashboard top';\n  }\n}\n"],"sourceRoot":".."}